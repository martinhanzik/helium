# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust

services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.
# rust: stable not specified in order to avoid making
# a default job.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME: "helium"
    - LD_LIBRARY_PATH: "/usr/local/lib"

matrix:
  allow_failures:
    - rust:
      - nightly
      - beta
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    # - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    # - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    # - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=armv7-unknown-linux-gnueabihf
    # - env: TARGET=mips-unknown-linux-gnu
    # - env: TARGET=mips64-unknown-linux-gnuabi64
    # - env: TARGET=mips64el-unknown-linux-gnuabi64
    # - env: TARGET=mipsel-unknown-linux-gnu
    # - env: TARGET=powerpc-unknown-linux-gnu
    # - env: TARGET=powerpc64-unknown-linux-gnu
    # - env: TARGET=powerpc64le-unknown-linux-gnu
    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: "mPdeEZSbhXkSNcv7BGZKakJEef8txF6e2EkfhW/dijsFrN4szkc4ys2sMWAVd4f6SvO/+a0DYpY1L6nsVsjbGGHlQ+xsHmMMliyilhO4sr8YFl9SvWd5bSnk/extQPTKOWq7fAwnckaNY8ymzeycYHAtY7bxMR7Vd+7gNXeWj7A+MsZjhDU762Pfyik+IqNlZB3K2pKjIMi2NdrMbBrxDBWNjS3JvYszJtcHYjTr3z5DSrqdqyzEOGV2lQTJmCFd8ZW1Hha84jCvl20zZYjoo6lz3p/7uTh/3JBJ+zobPOuyMIPiSb370nJeeotOnUtrFuxMGCBGntGxoe0r1veyiBd2k/Djf4eMwdhcm6Ew3JEJRXAC9Zu5rkBkW++X5+GKtsDoyxc4fJvIFihe3sLmNEktltZvuffff1/31Uqri9J8+iZrkOH9y3mmubSoAnf2tL195jxybJj9qNJiNpWYgmrWUUOdAtIHHDgm2rkexgXWUdfKcgOJ/fy79/8FXKnkn3C3+VQbdMdB3Z9FuysssBQzZGl5Pp8DyZca3C1S2D3lHKsq3GfNx7A8tTNTZg6xO3XYfbxUdHqMY8Vg/uKKzhrZvv8xh1lWDQnt7/lXWVjG420OLOS+CFcclIgSa82YSeekhkrznVw0VbklTjdEB0mwIhPRtlXucu14FxoaiJA="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache:
  cargo: true
  directories:
    - deps
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never